
fn main() -> int {
let _t1:&UF, _t2:int, _t3:int, _t4:int, i:int, j:int, n:int, uf:&UF
bb1:
  uf = $copy _t1
  $call_dir union(uf, 1, 2) then bb2

bb10:
  $call_ext print(_t3)
  _t4 = $arith add i 1
  i = $copy _t4
  $jump bb7

bb2:
  $call_dir union(uf, 3, 1) then bb3

bb3:
  $call_dir union(uf, 4, 5) then bb4

bb4:
  $call_dir union(uf, 6, 8) then bb5

bb5:
  $call_dir union(uf, 5, 8) then bb6

bb6:
  $jump bb7

bb7:
  _t2 = $cmp lt i n
  $branch _t2 bb8 bb9

bb8:
  _t3 = $call_dir find(uf, i) then bb10

bb9:
  $ret 0

entry:
  n = $copy 10
  _t1 = $call_dir mkUF(n) then bb1
}
